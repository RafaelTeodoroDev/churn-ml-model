#!/usr/bin/env python3
"""
Script para iniciar a aplica√ß√£o completa (API + Frontend)
"""

import subprocess
import time
import sys
import os
from pathlib import Path

def check_port(port):
    """Verifica se uma porta est√° em uso"""
    import socket
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    result = sock.connect_ex(('localhost', port))
    sock.close()
    return result == 0

def wait_for_api():
    """Aguarda a API estar pronta"""
    print("‚è≥ Aguardando API estar pronta...")
    max_attempts = 30
    attempts = 0

    while attempts < max_attempts:
        if check_port(8000):
            print("‚úÖ API est√° pronta!")
            return True
        time.sleep(1)
        attempts += 1
        print(f"   Tentativa {attempts}/{max_attempts}")

    print("‚ùå API n√£o respondeu em 30 segundos")
    return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Iniciando aplica√ß√£o completa...")
    print("=" * 50)

    # Verificar se estamos no diret√≥rio correto
    if not Path("api.py").exists():
        print("‚ùå Execute este script no diret√≥rio raiz do projeto")
        sys.exit(1)

    # Verificar se o frontend existe
    if not Path("frontend").exists():
        print("‚ùå Diret√≥rio frontend n√£o encontrado")
        sys.exit(1)

    # Iniciar API em background
    print("üîß Iniciando API...")
    api_process = subprocess.Popen([
        sys.executable, "api.py"
    ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Aguardar API estar pronta
    if not wait_for_api():
        print("‚ùå Falha ao iniciar API")
        api_process.terminate()
        sys.exit(1)

    # Iniciar frontend em background
    print("üé® Iniciando frontend...")
    frontend_process = subprocess.Popen([
        sys.executable, "frontend/server.py"
    ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Aguardar frontend estar pronta
    print("‚è≥ Aguardando frontend estar pronta...")
    time.sleep(3)

    if check_port(3000):
        print("‚úÖ Frontend est√° pronta!")
    else:
        print("‚ö†Ô∏è  Frontend pode n√£o estar pronta ainda")

    print("\nüéâ Aplica√ß√£o iniciada com sucesso!")
    print("=" * 50)
    print("üìä API: http://localhost:8000")
    print("üìö Docs: http://localhost:8000/docs")
    print("üé® Frontend: http://localhost:3000")
    print("=" * 50)
    print("‚èπÔ∏è  Pressione Ctrl+C para parar ambos os servi√ßos")

    try:
        # Manter os processos rodando
        while True:
            time.sleep(1)

            # Verificar se os processos ainda est√£o rodando
            if api_process.poll() is not None:
                print("‚ùå API parou inesperadamente")
                break

            if frontend_process.poll() is not None:
                print("‚ùå Frontend parou inesperadamente")
                break

    except KeyboardInterrupt:
        print("\nüõë Parando servi√ßos...")

        # Parar API
        if api_process.poll() is None:
            api_process.terminate()
            print("‚úÖ API parada")

        # Parar frontend
        if frontend_process.poll() is None:
            frontend_process.terminate()
            print("‚úÖ Frontend parado")

        print("üëã Aplica√ß√£o parada")

if __name__ == "__main__":
    main()
